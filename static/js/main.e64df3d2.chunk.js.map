{"version":3,"sources":["components/Navbar/Navbar.jsx","components/CountryCard/CountryCard.jsx","components/MainView/MainView.jsx","components/CountryDetails/CountryDetails.jsx","App.js","index.js"],"names":["Navbar","toggleMode","className","onClick","CountryCard","name","population","region","flag","capital","style","textDecoration","to","pathname","state","src","alt","toLocaleString","MainView","useState","countries","setCountries","input","setInput","select","setSelect","getData","a","fetch","response","json","countriesList","sessionStorage","setItem","JSON","stringify","console","log","useEffect","getItem","parse","type","placeholder","value","onChange","e","target","filter","item","toLowerCase","includes","map","id","flags","png","CountryDetails","props","location","useLocation","storedLocation","countriesInfo","find","slice","bordersArr","nativeName","subregion","topLevelDomain","currencies","languages","borders","forEach","el","i","length","cioc","push","App","darkMode","setDarkMode","basename","preventDefault","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAiBeA,EAdA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAChB,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qDACA,sBAAKA,UAAU,cAAcC,QAASF,EAAtC,UACE,mBAAGC,UAAU,gBACb,uD,yBCwBKE,G,MA7BK,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACpD,OACE,cAAC,IAAD,CACEC,MAAO,CAAEC,eAAgB,QACzBC,GAAI,CACFC,SAAS,IAAD,OAAMR,GACdS,MAAO,CAAET,KAAMA,IAJnB,SAOE,sBAAKH,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAca,IAAKP,EAAMQ,IAAKX,IAC7C,sBAAKH,UAAU,eAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BG,IAC/B,oBAAGH,UAAU,aAAb,yBACc,+BAAOI,EAAWW,sBAEhC,oBAAGf,UAAU,SAAb,qBACU,+BAAOK,OAEjB,oBAAGL,UAAU,UAAb,sBACW,+BAAOO,OAElB,gCCyDKS,G,MAhFE,WACf,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAUMC,EAAO,uCAAG,8BAAAC,EAAA,+EAEWC,MAAM,oCAFjB,cAENC,EAFM,gBAGgBA,EAASC,OAHzB,OAGNC,EAHM,OAKZC,eAAeC,QAAQ,YAAaC,KAAKC,UAAUJ,IACnDV,EAAaU,GAND,kDAQZK,QAAQC,IAAR,MARY,0DAAH,qDAoBb,OARAC,qBAAU,WACHN,eAAeO,QAAQ,aAG1BlB,EAAaa,KAAKM,MAAMR,eAAeO,QAAQ,eAF/Cb,MAID,IAGD,sBAAKxB,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,aAAf,UACE,mBAAGA,UAAU,kBACb,uBACEA,UAAU,uBACVuC,KAAK,OACLC,YAAY,uBACZC,MAAOrB,EACPsB,SAtCc,SAACC,GACvBtB,EAASsB,EAAEC,OAAOH,aAyCd,yBAAQzC,UAAU,YAAY0C,SAtCZ,SAACC,GACvBpB,EAAUoB,EAAEC,OAAOH,QAqCf,UACE,wBAAQA,MAAM,GAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,8BAGJ,qBAAKzC,UAAU,iBAAf,SACGkB,EACE2B,QAAO,SAACC,GAAD,OACNA,EAAK3C,KAAK4C,cAAcC,SAAS5B,EAAM2B,kBAExCF,QAAO,SAACC,GAAD,MAAqB,KAAXxB,GAAiBwB,EAAKzC,SAAWiB,KAClD2B,KAAI,SAACH,EAAMI,GACV,OACE,cAAC,EAAD,CAEE5C,KAAMwC,EAAKK,MAAMC,IACjBjD,KAAM2C,EAAK3C,KACXC,WAAY0C,EAAK1C,WACjBC,OAAQyC,EAAKzC,OACbE,QAASuC,EAAKvC,SALT2C,aCwCNG,G,MA1GQ,SAACC,GACtB,IAAMC,EAAWC,cACjB1B,eAAeC,QAAQ,WAAYC,KAAKC,UAAUsB,IAClD,IAAME,EAAiBzB,KAAKM,MAAMR,eAAeO,QAAQ,aACnDnB,EAAYc,KAAKM,MAAMR,eAAeO,QAAQ,cAC9CqB,EAAgBxC,EAAUyC,MAC9B,SAACb,GAAD,OAAUA,EAAK3C,OAASsD,EAAe9C,SAASiD,MAAM,MAElDC,EAAa,GAGjB1D,EAWEuD,EAXFvD,KACA2D,EAUEJ,EAVFI,WACAxD,EASEoD,EATFpD,KACAF,EAQEsD,EARFtD,WACAC,EAOEqD,EAPFrD,OACA0D,EAMEL,EANFK,UACAxD,EAKEmD,EALFnD,QACAyD,EAIEN,EAJFM,eACAC,EAGEP,EAHFO,WACAC,EAEER,EAFFQ,UACAC,EACET,EADFS,QAaF,OAVIA,GACFA,EAAQC,SAAQ,SAACC,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIpD,EAAUqD,OAAQD,IAChCD,IAAOnD,EAAUoD,GAAGE,MACtBX,EAAWY,KAAKvD,EAAUoD,OAOhC,sBAAKtE,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMU,GAAI,IAAV,SACE,yBAAQV,UAAU,kBAAlB,UACE,mBAAGA,UAAU,+BADf,YAIF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,OAAOa,IAAKP,EAAMQ,IAAKX,IACtC,sBAAKH,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,IAC9B,sBAAKH,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,8CACe,+BAAO8D,OAEtB,6CACc,+BAAO1D,EAAWW,sBAEhC,yCACU,+BAAOV,OAEjB,6CACc,+BAAO0D,OAErB,0CACW,+BAAOxD,UAGpB,sBAAKP,UAAU,YAAf,UACE,mDACoB,+BAAOgE,OAE3B,6CACc,+BAAOC,EAAW,GAAG9D,UAGnC,2CACa,IACV+D,EAAUjB,KAAI,SAACH,EAAMwB,GACpB,OAAIA,IAAMJ,EAAUK,OAAS,EACpB,+BAAezB,EAAK3C,MAATmE,GAEX,+BAAexB,EAAK3C,KAAO,MAAhBmE,eAM5B,sBAAKtE,UAAU,oBAAf,UACE,sBAAMA,UAAU,eAAhB,sBACA,qBAAKA,UAAU,UAAf,SACG6D,EAAWZ,KAAI,SAACH,EAAMI,GAAP,OACd,cAAC,IAAD,CAEE1C,MAAO,CAAEC,eAAgB,QACzBC,GAAI,CACFC,SAAS,IAAD,OAAMmC,EAAK3C,MACnBS,MAAO,CAAET,KAAM2C,EAAK3C,OALxB,SAQE,wBAAQH,UAAU,iBAAlB,SAAoC8C,EAAK3C,QAPpC+C,sB,MC7DRwB,MAtBf,WACE,MAAgCzD,oBAAS,GAAzC,mBAAO0D,EAAP,KAAiBC,EAAjB,KAQA,OACE,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,sBAAK7E,UAAS,cAAS2E,EAAW,YAAc,IAAhD,UACE,cAAC,EAAD,CAAQ5E,WATK,SAAC4C,GAClBA,EAAEmC,iBAEFF,GAAaD,MAOT,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWjE,IACjC,cAAC,IAAD,CAAOgE,KAAK,YAAYC,UAAW5B,aCnB7C6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e64df3d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = ({ toggleMode }) => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"nav-wrapper\">\r\n        <h2>Where in the world?</h2>\r\n        <div className=\"mode-toggle\" onClick={toggleMode}>\r\n          <i className=\"fas fa-moon\"></i>\r\n          <span> Dark Mode</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./CountryCard.css\";\r\n\r\nconst CountryCard = ({name, population, region, flag, capital}) => {\r\n  return (\r\n    <Link\r\n      style={{ textDecoration: \"none\" }}\r\n      to={{\r\n        pathname: `/${name}`,\r\n        state: { name: name },\r\n      }}\r\n    >\r\n      <div className=\"country-card\">\r\n        <img className=\"country-img\" src={flag} alt={name} />\r\n        <div className=\"country-info\">\r\n          <h3 className=\"country-title\">{name}</h3>\r\n          <p className=\"population\">\r\n            Population: <span>{population.toLocaleString()}</span>\r\n          </p>\r\n          <p className=\"region\">\r\n            Region: <span>{region}</span>\r\n          </p>\r\n          <p className=\"capital\">\r\n            Capital: <span>{capital}</span>\r\n          </p>\r\n          <p></p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CountryCard from \"../CountryCard/CountryCard\";\r\nimport \"./MainView.css\";\r\n\r\nconst MainView = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [select, setSelect] = useState(\"\");\r\n\r\n  const onChangeHandler = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const onSelectHandler = (e) => {\r\n    setSelect(e.target.value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const response = await fetch(\"https://restcountries.com/v2/all\");\r\n      const countriesList = await response.json();\r\n\r\n      sessionStorage.setItem(\"countries\", JSON.stringify(countriesList));\r\n      setCountries(countriesList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sessionStorage.getItem(\"countries\")) {\r\n      getData();\r\n    } else {\r\n      setCountries(JSON.parse(sessionStorage.getItem(\"countries\")));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"filter-div\">\r\n        <div className=\"search-div\">\r\n          <i className=\"fas fa-search\"></i>\r\n          <input\r\n            className=\"search-bar nav-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search for a country\"\r\n            value={input}\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <select className=\"nav-input\" onChange={onSelectHandler}>\r\n          <option value=\"\">All</option>\r\n          <option value=\"Africa\">Africa</option>\r\n          <option value=\"Americas\">Americas</option>\r\n          <option value=\"Asia\">Asia</option>\r\n          <option value=\"Europe\">Europe</option>\r\n          <option value=\"Oceania\">Oceania</option>\r\n          <option value=\"Polar\">Antarctica</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"countries-grid\">\r\n        {countries\r\n          .filter((item) =>\r\n            item.name.toLowerCase().includes(input.toLowerCase())\r\n          )\r\n          .filter((item) => select === \"\" || item.region === select)\r\n          .map((item, id) => {\r\n            return (\r\n              <CountryCard\r\n                key={id}\r\n                flag={item.flags.png}\r\n                name={item.name}\r\n                population={item.population}\r\n                region={item.region}\r\n                capital={item.capital}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"./CountryDetails.css\";\r\n\r\nconst CountryDetails = (props) => {\r\n  const location = useLocation();\r\n  sessionStorage.setItem(\"location\", JSON.stringify(location));\r\n  const storedLocation = JSON.parse(sessionStorage.getItem(\"location\"));\r\n  const countries = JSON.parse(sessionStorage.getItem(\"countries\"));\r\n  const countriesInfo = countries.find(\r\n    (item) => item.name === storedLocation.pathname.slice(1)\r\n  );\r\n  const bordersArr = [];\r\n\r\n  const {\r\n    name,\r\n    nativeName,\r\n    flag,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies,\r\n    languages,\r\n    borders,\r\n  } = countriesInfo;\r\n\r\n  if (borders) {\r\n    borders.forEach((el) => {\r\n      for (let i = 0; i < countries.length; i++) {\r\n        if (el === countries[i].cioc) {\r\n          bordersArr.push(countries[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"details-wrapper\">\r\n      <Link to={\"/\"}>\r\n        <button className=\"btn back-button\">\r\n          <i className=\"fas fa-long-arrow-alt-left\"></i>Back\r\n        </button>\r\n      </Link>\r\n      <div className=\"details-container\">\r\n        <img className=\"flag\" src={flag} alt={name} />\r\n        <div className=\"details-div\">\r\n          <h2 className=\"country-name\">{name}</h2>\r\n          <div className=\"details\">\r\n            <div className=\"details-1\">\r\n              <p>\r\n                Native Name: <span>{nativeName}</span>\r\n              </p>\r\n              <p>\r\n                Population: <span>{population.toLocaleString()}</span>\r\n              </p>\r\n              <p>\r\n                Region: <span>{region}</span>\r\n              </p>\r\n              <p>\r\n                Sub Region: <span>{subregion}</span>\r\n              </p>\r\n              <p>\r\n                Capital: <span>{capital}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"details-2\">\r\n              <p>\r\n                Top Level Domain: <span>{topLevelDomain}</span>\r\n              </p>\r\n              <p>\r\n                Currencies: <span>{currencies[0].name}</span>\r\n              </p>\r\n\r\n              <p>\r\n                Languages:{\" \"}\r\n                {languages.map((item, i) => {\r\n                  if (i === languages.length - 1) {\r\n                    return <span key={i}>{item.name}</span>;\r\n                  } else {\r\n                    return <span key={i}>{item.name + \", \"}</span>;\r\n                  }\r\n                })}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"borders-container\">\r\n            <span className=\"border-title\">Borders:</span>\r\n            <div className=\"borders\">\r\n              {bordersArr.map((item, id) => (\r\n                <Link\r\n                  key={id}\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={{\r\n                    pathname: `/${item.name}`,\r\n                    state: { name: item.name },\r\n                  }}\r\n                >\r\n                  <button className=\"btn border-btn\">{item.name}</button>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport MainView from \"./components/MainView/MainView\";\r\nimport CountryDetails from \"./components/CountryDetails/CountryDetails\";\r\n\r\nimport \"./css/index.css\";\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleMode = (e) => {\r\n    e.preventDefault();\r\n\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <Router basename=\"/\">\r\n      <div className={`App ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n        <Navbar toggleMode={toggleMode} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainView} />\r\n          <Route path=\"/:details\" component={CountryDetails} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}